The program implements a simple social network server and client system using a binary communication protocol. Users can register, log in, follow other users, and post messages.
The server supports push notifications for real-time updates, meaning it can broadcast messages to clients without explicit requests.
The server is built using Thread-Per-Client (TPC) and Reactor models and handles various commands defined by opcodes.
These commands include registering users, logging in, posting messages, and more. The server manages user data in memory during its runtime,
and all interactions between clients and the server are processed through predefined message formats and lengths

1.1) run the server:
mvn clean
mvn compile
for tpc:
mvn exec:java -Dexec.mainClass="bgu.spl.net.impl.BGSServer.TPCMain" -Dexec.args="8888"
for reactor:
mvn exec:java -Dexec.mainClass="bgu.spl.net.impl.BGSServer.ReactorMain" -Dexec.args="8888 3"

run the client:
make clean all
make
cd ./bin
./echo.elf

1.2) example for each message:
REGISTER carmela 123 12-01-1997
LOGIN carmela 123 1
REGISTER roy 111 27-11-1997
LOGIN roy 111 1
LOGOUT
FOLLOW 0 roy
POST bla bla bla
PM roy hey
LOGSTAT
STAT carmela
BLOCK roy

2) we stored the filtered words in the base server

3) Please if you can do not check LOGSTAT and STAT because we failed to make it work as well (it will crash the server)
